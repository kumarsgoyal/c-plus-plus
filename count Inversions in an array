/*
  nversion Count for an array indicates â€“ how far (or close) the array is from being sorted.
  If array is already sorted then inversion count is 0.
  If array is sorted in reverse order that inversion count is the maximum. 
  
*/


#include <bits/stdc++.h> 
using namespace std; 


int getInvCount(int arr[], int n) 
{ 
    int inv_count = 0; 
    for (int i = 0; i < n - 1; i++) 
        for (int j = i + 1; j < n; j++) 
            if (arr[i] > arr[j]) 
                inv_count++; 
  
    return inv_count; 
} 
  
// main
int main() 
{ 
    int arr[] = { 1, 20, 6, 4, 5 }; 
    int n = sizeof(arr) / sizeof(arr[0]); 
    cout << " Number of inversions are "<< getInvCount(arr, n); 
    return 0; 
} 
